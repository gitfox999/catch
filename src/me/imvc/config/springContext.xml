<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">






	<!-- dataSource配置 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/catc?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="x5" />
	</bean>

	<!-- sessionFactory配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		lazy-init="false">
		<property name="dataSource" ref="dataSource" />		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<property name="mappingDirectoryLocations"> 
		<list>
		<value>classpath*:me/imvc/app/entities/</value>
		</list>
		</property>
	</bean>

	<!-- begin事物配置 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"></tx:method>
			<tx:method name="update*" propagation="REQUIRED"></tx:method>
			<tx:method name="delete*" propagation="REQUIRED"></tx:method>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="modelsImplPointCuts"
			expression="execution(* me.imvc.app.models.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="modelsImplPointCuts" />
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="modelsPointCuts"
			expression="execution(* me.imvc.app.models.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="modelsPointCuts" />
		<!-- 淇滨中学一卡通系统添加 事务与方法匹配 -->
	</aop:config>
		<aop:config>
		<aop:pointcut id="modelsPointCuts2"
			expression="execution(* me.imvc.app.models.*.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="modelsPointCuts2" />
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="modelsSystemPointCuts"
			expression="execution(* me.imvc.app.models.system.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="modelsSystemPointCuts" />
	</aop:config>
	<aop:config>
		<aop:pointcut id="BaseModelPointCuts"
			expression="execution(* me.imvc.core.BaseModel.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="BaseModelPointCuts" />
	</aop:config>
	
	<!-- end事物配置 -->

	<!-- HibernateTemplate配置 -->
	<bean id="hibernateTemplate" class="me.imvc.core.HibernateTemplateSupport"
		lazy-init="false">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- JdbcTemplate配置 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		lazy-init="false">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- EntityUtils -->
	<bean id="entityUtils" class="me.imvc.core.EntityUtils"></bean>

	<!-- log4j 配置 -->
	<bean id="loggerController" class="org.apache.log4j.Logger"
		factory-method="getLogger">
		<constructor-arg value="me.imvc.controllers" />
	</bean>
	<bean id="loggerModel" class="org.apache.log4j.Logger"
		factory-method="getLogger">
		<constructor-arg value="me.imvc.models" />
	</bean>
	<bean id="loggerLib" class="org.apache.log4j.Logger"
		factory-method="getLogger">
		<constructor-arg value="me.imvc.lib" />
	</bean>

	<!-- springSecurity -->
	<bean id="securityContext"
		class="org.springframework.security.core.context.SecurityContextHolder"
		factory-method="getContext"></bean>

	<!-- 定义目标bean和bean中的方法 
	<bean id="Job"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="quartzTest" />
		<property name="targetMethod" value="execute" />
	</bean>

	<bean id="quartzTestcron" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="Job" />
		<property name="cronExpression">
			<value>0/10 * * * * ?</value>
		</property>
	</bean>

	<bean autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref local="quartzTestcron" />
			</list>
		</property>
	</bean>
-->
</beans>