<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>iMvc2</display-name>
  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>iMvc2.root</param-value>
  </context-param>
  <!-- Spring配置文件路径 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:me/imvc/config/springContext.xml,classpath:me/imvc/config/springSecurity.xml,classpath:me/imvc/config/springBeans.xml</param-value>
  </context-param>
  
  <!-- log4j配置文件路径 -->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:me/imvc/config/log4j.properties</param-value>
  </context-param>
  
  <!-- 验证码验证拦截器 -->
  <filter>
    <filter-name>VerificationCode</filter-name>
    <filter-class>me.imvc.core.VerificationCodeFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>VerificationCode</filter-name>
    <url-pattern>/j_spring_security_check_abc</url-pattern>
  </filter-mapping>
  
  <!-- springSecurity拦截器 -->
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!-- springSecurity拦截器 -->
  <filter>
    <filter-name>ipfilter</filter-name>
    <filter-class>me.imvc.core.IpFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>ipfilter</filter-name>
    <url-pattern>/a.jpg</url-pattern>
  </filter-mapping>
  <!-- 注意：拦截器的顺序不能错 -->
  <!-- 视图HibernateSession懒加载拦截器 -->
  <filter>
    <filter-name>OpenSessionInViewFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    <init-param>
			<param-name>flushMode</param-name>
			<param-value>AUTO</param-value>
		</init-param>
  </filter>
  <filter-mapping>
    <filter-name>OpenSessionInViewFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- Struts2拦截器 -->
  <filter>
    <filter-name>StrutsPrepareAndExecuteFilter</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    <init-param>
      <param-name>config</param-name>
      <param-value>struts-default.xml,struts-plugin.xml,me/imvc/core/struts2-rest.xml,me/imvc/config/struts2.xml,</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>StrutsPrepareAndExecuteFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 验证码  -->
  <servlet>
    <servlet-name>Kaptcha</servlet-name>
    <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
    <init-param>
      <param-name>kaptcha.border</param-name>
      <param-value>no</param-value>
    </init-param>
    <init-param>
      <param-name>kaptcha.textproducer.font.color</param-name>
      <param-value>black</param-value>
    </init-param>
    <init-param>
      <param-name>kaptcha.textproducer.char.space</param-name>
      <param-value>2</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>Kaptcha</servlet-name>
    <url-pattern>/verification_code.jpg</url-pattern>
  </servlet-mapping>

  <!-- Log4j配置文件监听器 -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <!-- Spring上下文监听器 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- Request监听 设置bean作用域 为request -->
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  <!-- SpringSecurity监听 session事件 -->
  <listener>
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  </listener>
  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>
  
  <!-- 定义错误页面 -->
  <error-page>
    <exception-type>java.lang.NoSuchMethodException</exception-type>
    <location>/NoSuchMethodException.jsp</location>
  </error-page> 
   <error-page>
    <exception-type> org.hibernate.search.SearchException</exception-type>
    <location>/SearchException.jsp</location>
  </error-page>
  <error-page>
    <exception-type>org.springframework.security.access.AccessDeniedException</exception-type>
    <location>/AccessDeniedException.jsp</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/404.jsp</location>
  </error-page>

</web-app>